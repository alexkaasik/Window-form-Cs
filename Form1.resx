<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>